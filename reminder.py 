# pip install requests python-dotenv
import os
import json
from datetime import date, datetime
import requests
from dotenv import load_dotenv

load_dotenv()

def days_until_birthday(birthday_str):
    today = date.today()
    bday = datetime.strptime(birthday_str, "%m-%d").date().replace(year=today.year)
    if bday < today:
        bday = bday.replace(year=today.year + 1)
    return (bday - today).days

def should_remind(days_left, status):
    if days_left == 0:
        return True
    if status == "bestie" and days_left < 30:
        return True
    if status == "close" and days_left in [7,0]:
        return True
    return False

def make_message(name, days_left, bday):
    if days_left == 0:
        return f"🎂 It's {name}'s birthday today! It's on {bday}."
    elif days_left == 7:
        return f"📅 {name}'s birthday is in 1 week. It's on {bday}."
    elif days_left == 30:
        return f"🗓️ {name}'s birthday is in 30 days. It's on {bday}."
    return None

def send_email(message):
    url = "https://api.brevo.com/v3/smtp/email"
    payload = {
        "sender": {"name": "Birthday Bot", "email": os.getenv("FROM_EMAIL")},
        "to": [{"email": os.getenv("TO_EMAIL")}],
        "subject": "🎉 Birthday Reminder: " + ", ".join([friend["name"] for friend in friends]),
        "textContent": message
    }
    headers = {
        "accept": "application/json",
        "content-type": "application/json",
        "api-key": os.getenv("BREVO_API_KEY")
    }
    try:
        response = requests.post(url, json=payload, headers=headers)
        print("Email sent:", response.status_code, response.text)
    except Exception as e:
        print("Error sending email:", e)

# Load friend list
with open("birthday_data_test.json", "r") as f:
    friends = json.load(f)

messages = []
for friend in friends:
    days_left = days_until_birthday(friend["birthday"])
    if should_remind(days_left, friend["status"]):
        msg = make_message(friend["name"], days_left, friend["birthday"])
        if msg:
            messages.append(msg)

if messages:
    combined_message = "\n".join(messages)
    send_email(combined_message)
else:
    print("No birthdays to remind today.")

# Optional: log the run
with open("log.txt", "a") as log:
    log.write(f"{date.today()} - {'; '.join(messages) if messages else 'No reminders today'}\n")
